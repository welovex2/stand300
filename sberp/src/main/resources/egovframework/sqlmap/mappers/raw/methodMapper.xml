<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="egovframework.raw.service.MethodMapper">

	<insert id="insertCe" parameterType="ceDTO">
		<selectKey resultType="int" keyProperty="ceSeq" order="BEFORE">
	        SELECT ifnull(MAX(CE_SEQ)+1,1) ceSeq FROM METHOD_CE_TB
	    </selectKey>
		INSERT INTO METHOD_CE_TB
		(
			CE_SEQ,
			RAW_SEQ,
			VLT_AC_YN,
			VLT_ETC,
			VAR_N_YN,
			VAR_Y_YN,
			ROOM1_YN,
			ROOM2_YN,
			ROOM3_YN,
			TEMP,
			TEMP_PLUS,
			HMDT,
			HMDT_PLUS,
			MSRMN_YEAR,
			MSRMN_MON,
			MSRMN_DAY,
			MSRMN_HOUR,
			MSRMN_MIN,
			SIGN,
			SIGN_URL,
			RESULT_CODE,
			RESULT_URL,
			INS_MEM_ID,
			UDT_MEM_ID
		)
		VALUES
		(
			#{ceSeq},
			#{rawSeq},
			#{vltAcYn},
			#{vltEtc},
			#{varNYn},
			#{varYYn},
			#{room1Yn},
			#{room2Yn},
			#{room3Yn},
			#{temp},
			#{tempPlus},
			#{hmdt},
			#{hmdtPlus},
			#{msrmnYear},
			#{msrmnMon},
			#{msrmnDay},
			#{msrmnHour},
			#{msrmnMin},
			#{sign},
			#{signUrl},
			#{resultCode},
			#{resultUrl},
			#{insMemId},
			#{udtMemId}
		)
		ON DUPLICATE KEY UPDATE
			VLT_AC_YN = #{vltAcYn},
			VLT_ETC = #{vltEtc},
			VAR_N_YN = #{varNYn},
			VAR_Y_YN = #{varYYn},
			ROOM1_YN = #{room1Yn},
			ROOM2_YN = #{room2Yn},
			ROOM3_YN = #{room3Yn},
			TEMP = #{temp},
			TEMP_PLUS = #{tempPlus},
			HMDT = #{hmdt},
			HMDT_PLUS = #{hmdtPlus},
			MSRMN_YEAR = #{msrmnYear},
			MSRMN_MON = #{msrmnMon},
			MSRMN_DAY = #{msrmnDay},
			MSRMN_HOUR = #{msrmnHour},
			MSRMN_MIN = #{msrmnMin},
			SIGN = #{sign},
			<if test="signUrl != null and signUrl != ''">SIGN_URL = #{signUrl},</if>
			RESULT_CODE = #{resultCode},
			<if test="resultUrl != null and resultUrl != ''">RESULT_URL = #{resultUrl},</if>
			UDT_MEM_ID = #{udtMemId}
	</insert>

	<insert id="insertMac">
		<foreach collection="macList" item="item" separator=";">
		INSERT INTO RAW_MAC_TB
		(
			RAW_MAC_SEQ,
			MACHINE_TYPE,
			RAW_SEQ,
			MACHINE_SEQ,
			USE_YN
		)
		VALUES
		(
			(SELECT IFNULL(MAX(RAW_MAC_SEQ) + 1, 1) FROM RAW_MAC_TB sub),
			#{machineType},
			#{rawSeq},
			#{item.machineSeq},
			#{item.useYn}
		)
		ON DUPLICATE KEY UPDATE
			USE_YN = #{item.useYn}
		</foreach>
	</insert>
	
	<select id="macList" resultType="egovMap">
		SELECT RAW_MAC_SEQ,
			MACHINE_TYPE,
			RAW_SEQ,
			MACHINE_SEQ,
			USE_YN
		FROM RAW_MAC_TB
		WHERE 1=1
		AND RAW_SEQ = #{rawSeq}
		AND MACHINE_TYPE = #{machineType}
	</select>
	
	<select id="esdSubList" parameterType="int" resultType="egovMap">
		SELECT 
			ESD_SUB_SEQ,
		    ESD_SEQ,
		    DRCTL,
		    DC_CODE,
		    RESULT_CODE,
		    MEMO,
		    STATE
		FROM METHOD_ESD_SUB_TB
		WHERE 1=1
		AND STATE != 'D'
		AND ESD_SEQ = #{esdSeq}
	</select>
	
	<select id="ceDetail" parameterType="int" resultType="ceDTO">
		SELECT CE_SEQ,
		    RAW_SEQ,
		    VLT_AC_YN,
		    VLT_ETC,
		    VAR_N_YN,
		    VAR_Y_YN,
		    ROOM1_YN,
		    ROOM2_YN,
		    ROOM3_YN,
		    TEMP,
		    TEMP_PLUS,
		    HMDT,
		    HMDT_PLUS,
		    MSRMN_YEAR,
		    MSRMN_MON,
		    MSRMN_DAY,
		    MSRMN_HOUR,
		    MSRMN_MIN,
		    SIGN,
		    <![CDATA[concat('/file/getImage.do?atchFileId=',SIGN_URL,'&fileSn=0') SIGN_URL, ]]>
		    RESULT_CODE,
		    RESULT_URL
		FROM METHOD_CE_TB
		WHERE 1=1
		AND RAW_SEQ = #{rawSeq}
	</select>

	<select id="reDetail" parameterType="int" resultType="reDTO">
		SELECT RE_SEQ,
		    RAW_SEQ,
		    VLT_AC_YN,
		    VLT_ETC,
		    VAR_N_YN,
		    VAR_Y_YN,
		    HZ1_CODE,
		    HZ1_VLT10M_YN,
		    HZ1_VLT3M_YN,
		    HZ1_VLT_ETC1,
		    HZ1_VLT_ETC1_YN,
		    HZ1_VLT_ETC2,
		    HZ1_VLT_ETC2_YN,
		    HZ1_LNGTH_1M_YN,
		    HZ1_LNGTH_3M_YN,
		    HZ1_LNGTH_10M_YN,
		    HZ1_LNGTH_30M_YN,
		    HZ1_ANTN_2M_YN,
		    HZ1_ANTN_3M_YN,
		    HZ1_ANTN_4M_YN,
		    HZ1_TEMP,
		    HZ1_TEMP_PLUS,
		    HZ1_HMDT,
		    HZ1_HMDT_PLUS,
		    HZ1_MSRMN_YEAR,
		    HZ1_MSRMN_MON,
		    HZ1_MSRMN_DAY,
		    HZ1_MSRMN_HOUR,
		    HZ1_MSRMN_MIN,
		    HZ1_SIGN,
		     <![CDATA[concat('/file/getImage.do?atchFileId=',HZ1_SIGN_URL,'&fileSn=0') HZ1_SIGN_URL, ]]>
		    HZ1_RESULT_CODE,
		    HZ2_CODE,
		    HZ2_VLT10M_YN,
		    HZ2_VLT3M_YN,
		    HZ2_VLT_ETC1,
		    HZ2_VLT_ETC1_YN,
		    HZ2_VLT_ETC2,
		    HZ2_VLT_ETC2_YN,
		    HZ2_LNGTH_1M_YN,
		    HZ2_LNGTH_3M_YN,
		    HZ2_LNGTH_10M_YN,
		    HZ2_LNGTH_30M_YN,
		    HZ2_TEMP,
		    HZ2_TEMP_PLUS,
		    HZ2_HMDT,
		    HZ2_HMDT_PLUS,
		    HZ2_MSRMN_YEAR,
		    HZ2_MSRMN_MON,
		    HZ2_MSRMN_DAY,
		    HZ2_MSRMN_HOUR,
		    HZ2_MSRMN_MIN,
		    HZ2_SIGN,
		    <![CDATA[concat('/file/getImage.do?atchFileId=',HZ2_SIGN_URL,'&fileSn=0') HZ2_SIGN_URL, ]]>
		    HZ2_RESULT_CODE,
		    RESULT_URL
		FROM METHOD_RE_TB
		WHERE 1=1
		AND RAW_SEQ = #{rawSeq}
	</select>
	
	<insert id="insertRe" parameterType="reDTO">
		<selectKey resultType="int" keyProperty="reSeq" order="BEFORE">
	        SELECT ifnull(MAX(RE_SEQ)+1,1) reSeq FROM METHOD_RE_TB
	    </selectKey>
		INSERT INTO METHOD_RE_TB
		(
			RE_SEQ,
			RAW_SEQ,
			VLT_AC_YN,
			VLT_ETC,
			VAR_N_YN,
			VAR_Y_YN,
			HZ1_CODE,
			HZ1_VLT10M_YN,
			HZ1_VLT3M_YN,
			HZ1_VLT_ETC1,
			HZ1_VLT_ETC1_YN,
			HZ1_VLT_ETC2,
			HZ1_VLT_ETC2_YN,
			HZ1_LNGTH_1M_YN,
			HZ1_LNGTH_3M_YN,
			HZ1_LNGTH_10M_YN,
			HZ1_LNGTH_30M_YN,
			HZ1_ANTN_2M_YN,
			HZ1_ANTN_3M_YN,
			HZ1_ANTN_4M_YN,
			HZ1_TEMP,
			HZ1_HMDT,
			HZ1_MSRMN_YEAR,
			HZ1_MSRMN_MON,
			HZ1_MSRMN_DAY,
			HZ1_MSRMN_HOUR,
			HZ1_MSRMN_MIN,
			HZ1_SIGN,
			HZ1_SIGN_URL,
			HZ1_RESULT_CODE,
			HZ2_CODE,
			HZ2_VLT10M_YN,
			HZ2_VLT3M_YN,
			HZ2_VLT_ETC1,
			HZ2_VLT_ETC1_YN,
			HZ2_VLT_ETC2,
			HZ2_VLT_ETC2_YN,
			HZ2_LNGTH_1M_YN,
			HZ2_LNGTH_3M_YN,
			HZ2_LNGTH_10M_YN,
			HZ2_LNGTH_30M_YN,
			HZ2_TEMP,
			HZ2_HMDT,
			HZ2_MSRMN_YEAR,
			HZ2_MSRMN_MON,
			HZ2_MSRMN_DAY,
			HZ2_MSRMN_HOUR,
			HZ2_MSRMN_MIN,
			HZ2_SIGN,
			HZ2_SIGN_URL,
			HZ2_RESULT_CODE,
			RESULT_URL,
			INS_MEM_ID,
			UDT_MEM_ID
		)
		VALUES
		(
			#{reSeq},
			#{rawSeq},
			#{vltAcYn},
			#{vltEtc},
			#{varNYn},
			#{varYYn},
			#{hz1Code},
			#{hz1Vlt10mYn},
			#{hz1Vlt3mYn},
			#{hz1VltEtc1},
			#{hz1VltEtc1Yn},
			#{hz1VltEtc2},
			#{hz1VltEtc2Yn},
			#{hz1Lngth1mYn},
			#{hz1Lngth3mYn},
			#{hz1Lngth10mYn},
			#{hz1Lngth30mYn},
			#{hz1Antn2mYn},
			#{hz1Antn3mYn},
			#{hz1Antn4mYn},
			#{hz1Temp},
			#{hz1Hmdt},
			#{hz1MsrmnYear},
			#{hz1MsrmnMon},
			#{hz1MsrmnDay},
			#{hz1MsrmnHour},
			#{hz1MsrmnMin},
			#{hz1Sign},
			#{hz1SignUrl},
			#{hz1ResultCode},
			#{hz2Code},
			#{hz2Vlt10mYn},
			#{hz2Vlt3mYn},
			#{hz2VltEtc1},
			#{hz2VltEtc1Yn},
			#{hz2VltEtc2},
			#{hz2VltEtc2Yn},
			#{hz2Lngth1mYn},
			#{hz2Lngth3mYn},
			#{hz2Lngth10mYn},
			#{hz2Lngth30mYn},
			#{hz2Temp},
			#{hz2Hmdt},
			#{hz2MsrmnYear},
			#{hz2MsrmnMon},
			#{hz2MsrmnDay},
			#{hz2MsrmnHour},
			#{hz2MsrmnMin},
			#{hz2Sign},
			#{hz2SignUrl},
			#{hz2ResultCode},
			#{resultUrl},
			#{insMemId},
			#{udtMemId}
		)
		ON DUPLICATE KEY UPDATE
			VLT_AC_YN = #{vltAcYn},
			VLT_ETC = #{vltEtc},
			VAR_N_YN = #{varNYn},
			VAR_Y_YN = #{varYYn},
			HZ1_CODE = #{hz1Code},
			HZ1_VLT10M_YN = #{hz1Vlt10mYn},
			HZ1_VLT3M_YN = #{hz1Vlt3mYn},
			HZ1_VLT_ETC1 = #{hz1VltEtc1},
			HZ1_VLT_ETC1_YN = #{hz1VltEtc1Yn},
			HZ1_VLT_ETC2 = #{hz1VltEtc2},
			HZ1_VLT_ETC2_YN = #{hz1VltEtc2Yn},
			HZ1_LNGTH_1M_YN = #{hz1Lngth1mYn},
			HZ1_LNGTH_3M_YN = #{hz1Lngth3mYn},
			HZ1_LNGTH_10M_YN = #{hz1Lngth10mYn},
			HZ1_LNGTH_30M_YN = #{hz1Lngth30mYn},
			HZ1_ANTN_2M_YN = #{hz1Antn2mYn},
			HZ1_ANTN_3M_YN = #{hz1Antn3mYn},
			HZ1_ANTN_4M_YN = #{hz1Antn4mYn},
			HZ1_TEMP = #{hz1Temp},
			HZ1_HMDT = #{hz1Hmdt},
			HZ1_MSRMN_YEAR = #{hz1MsrmnYear},
			HZ1_MSRMN_MON = #{hz1MsrmnMon},
			HZ1_MSRMN_DAY = #{hz1MsrmnDay},
			HZ1_MSRMN_HOUR = #{hz1MsrmnHour},
			HZ1_MSRMN_MIN = #{hz1MsrmnMin},
			HZ1_SIGN = #{hz1Sign},
			<if test="hz1SignUrl != null and hz1SignUrl != ''">HZ1_SIGN_URL = #{hz1SignUrl},</if>
			HZ1_RESULT_CODE = #{hz1ResultCode},
			HZ2_CODE = #{hz2Code},
			HZ2_VLT10M_YN = #{hz2Vlt10mYn},
			HZ2_VLT3M_YN = #{hz2Vlt3mYn},
			HZ2_VLT_ETC1 = #{hz2VltEtc1},
			HZ2_VLT_ETC1_YN = #{hz2VltEtc1Yn},
			HZ2_VLT_ETC2 = #{hz2VltEtc2},
			HZ2_VLT_ETC2_YN = #{hz2VltEtc2Yn},
			HZ2_LNGTH_1M_YN = #{hz2Lngth1mYn},
			HZ2_LNGTH_3M_YN = #{hz2Lngth3mYn},
			HZ2_LNGTH_10M_YN = #{hz2Lngth10mYn},
			HZ2_LNGTH_30M_YN = #{hz2Lngth30mYn},
			HZ2_TEMP = #{hz2Temp},
			HZ2_HMDT = #{hz2Hmdt},
			HZ2_MSRMN_YEAR = #{hz2MsrmnYear},
			HZ2_MSRMN_MON = #{hz2MsrmnMon},
			HZ2_MSRMN_DAY = #{hz2MsrmnDay},
			HZ2_MSRMN_HOUR = #{hz2MsrmnHour},
			HZ2_MSRMN_MIN = #{hz2MsrmnMin},
			HZ2_SIGN = #{hz2Sign},
			<if test="hz2SignUrl != null and hz2SignUrl != ''">HZ2_SIGN_URL = #{hz2SignUrl},</if>
			HZ2_RESULT_CODE = #{hz2ResultCode},
			RESULT_URL = #{resultUrl},
			UDT_MEM_ID = #{udtMemId}
	</insert>
	
	<select id="esdDetail" parameterType="int" resultType="esdDTO">
		SELECT ESD_SEQ,
		    RAW_SEQ,
		    VLT_AC_YN,
		    VLT_ETC,
		    VLT_ETC_YN,
		    VAR_N_YN,
		    VAR_Y_YN,
		    ROOM1_YN,
		    ROOM2_YN,
		    TEMP,
		    TEMP_PLUS,
		    HMDT,
		    HMDT_PLUS,
		    BRMT,
		    BRMT_PLUS,
		    DC_1S_YN,
		    DC_ETC,
		    DC_ETC_YN,
		    DC_GIN_YN,
		    DC_CON_YN,
		    DC_IMP_YN,
		    DC_IMP_ETC,
		    DC_IMP_ETC_YN,
		    EVLTN_A_YN,
		    EVLTN_B_YN,
		    EVLTN_C_YN,
		    DC_CON_2_YN,
		    DC_CON_4_YN,
		    DC_CON_6_YN,
		    DC_CON_8_YN,
		    DC_CON_ETC,
		    DC_CON_ETC_YN,
		    DC_GIN_2_YN,
		    DC_GIN_4_YN,
		    DC_GIN_6_YN,
		    DC_GIN_8_YN,
		    DC_GIN_ETC,
		    DC_GIN_ETC_YN,
		    H_2_YN,
		    H_4_YN,
		    H_6_YN,
		    H_8_YN,
		    H_ETC,
		    H_ETC_YN,
		    V_2_YN,
		    V_4_YN,
		    V_6_YN,
		    V_8_YN,
		    V_ETC,
		    V_ETC_YN,
		    MSRMN_YEAR,
		    MSRMN_MON,
		    MSRMN_DAY,
		    MSRMN_HOUR,
		    MSRMN_MIN,
		    SIGN,
		    <![CDATA[concat('/file/getImage.do?atchFileId=',SIGN_URL,'&fileSn=0') SIGN_URL,]]>
		    RESULT_CODE,
		    INDRC_H_YN,
		    INDRC_H_RESULT_CODE,
		    INDRC_H_MEMO,
		    INDRC_V_YN,
		    INDRC_V_RESULT_CODE,
		    INDRC_V_MEMO,
		    CMNT_A_YN,
		    CMNT_ETC,
		    CMNT_ETC_YN
		FROM METHOD_ESD_TB
		WHERE 1=1
		AND RAW_SEQ = #{rawSeq}
	</select>
	
	<insert id="insertEsd" parameterType="esdDTO">
	    <selectKey resultType="int" keyProperty="esdSeq" order="AFTER">
	        SELECT ESD_SEQ esdSeq FROM METHOD_ESD_TB WHERE RAW_SEQ = #{rawSeq}
	    </selectKey>
		INSERT INTO METHOD_ESD_TB
		(
			ESD_SEQ,
			RAW_SEQ,
			VLT_AC_YN,
			VLT_ETC,
			VLT_ETC_YN,
			VAR_N_YN,
			VAR_Y_YN,
			ROOM1_YN,
			ROOM2_YN,
			TEMP,
			TEMP_PLUS,
			HMDT,
			HMDT_PLUS,
			BRMT,
			BRMT_PLUS,
			DC_1S_YN, DC_ETC, DC_ETC_YN, DC_GIN_YN, DC_CON_YN, DC_IMP_YN, DC_IMP_ETC, DC_IMP_ETC_YN,
			EVLTN_A_YN, EVLTN_B_YN, EVLTN_C_YN,
			DC_CON_2_YN, DC_CON_4_YN, DC_CON_6_YN, DC_CON_8_YN, DC_CON_ETC, DC_CON_ETC_YN,
			DC_GIN_2_YN, DC_GIN_4_YN, DC_GIN_6_YN, DC_GIN_8_YN, DC_GIN_ETC, DC_GIN_ETC_YN,
			H_2_YN, H_4_YN, H_6_YN, H_8_YN, H_ETC, H_ETC_YN,
			V_2_YN, V_4_YN, V_6_YN, V_8_YN, V_ETC, V_ETC_YN,
			MSRMN_YEAR, MSRMN_MON, MSRMN_DAY, MSRMN_HOUR, MSRMN_MIN,
			SIGN, SIGN_URL, RESULT_CODE,
			INDRC_H_YN, INDRC_H_RESULT_CODE, INDRC_H_MEMO,
			INDRC_V_YN, INDRC_V_RESULT_CODE, INDRC_V_MEMO,
			CMNT_A_YN, CMNT_ETC, CMNT_ETC_YN,
			INS_MEM_ID, UDT_MEM_ID
		)
		VALUES
		(
			(SELECT ifnull(MAX(seq.ESD_SEQ)+1,1) esdSeq FROM METHOD_ESD_TB seq),
			#{rawSeq},
			#{vltAcYn},
			#{vltEtc},
			#{vltEtcYn},
			#{varNYn},
			#{varYYn},
			#{room1Yn},
			#{room2Yn},
			#{temp},
			#{tempPlus},
			#{hmdt},
			#{hmdtPlus},
			#{brmt},
			#{brmtPlus},
			#{dc1sYn},#{dcEtc},#{dcEtcYn},#{dcGinYn},#{dcConYn},#{dcImpYn},#{dcImpEtc},#{dcImpEtcYn},
			#{evltnAYn},#{evltnBYn},#{evltnCYn},
			#{dcCon2Yn},#{dcCon4Yn},#{dcCon6Yn},#{dcCon8Yn},#{dcConEtc},#{dcConEtcYn},
			#{dcGin2Yn},#{dcGin4Yn},#{dcGin6Yn},#{dcGin8Yn},#{dcGinEtc},#{dcGinEtcYn},
			#{h2Yn},#{h4Yn},#{h6Yn},#{h8Yn},#{hEtc},#{hEtcYn},
			#{v2Yn},#{v4Yn},#{v6Yn},#{v8Yn},#{vEtc},#{vEtcYn},
			#{msrmnYear},#{msrmnMon},#{msrmnDay},#{msrmnHour},#{msrmnMin},
			#{sign},#{signUrl},#{resultCode},
			#{indrcHYn},#{indrcHResultCode},#{indrcHMemo},
			#{indrcVYn},#{indrcVResultCode},#{indrcVMemo},
			#{cmntAYn},#{cmntEtc},#{cmntEtcYn},
			#{insMemId},#{udtMemId}
			)
			ON DUPLICATE KEY UPDATE
				VLT_AC_YN = #{vltAcYn},
			    VLT_ETC = #{vltEtc},
			    VLT_ETC_YN = #{vltEtcYn},
			    VAR_N_YN = #{varNYn},
			    VAR_Y_YN = #{varYYn},
			    ROOM1_YN = #{room1Yn},
			    ROOM2_YN = #{room2Yn},
			    TEMP = #{temp},
			    TEMP_PLUS = #{tempPlus},
			    HMDT = #{hmdt},
			    HMDT_PLUS = #{hmdtPlus},
			    BRMT = #{brmt},
			    BRMT_PLUS = #{brmtPlus},
			    DC_1S_YN = #{dc1sYn},
			    DC_ETC = #{dcEtc},
			    DC_ETC_YN = #{dcEtcYn},
			    DC_GIN_YN = #{dcGinYn},
			    DC_CON_YN = #{dcConYn},
			    DC_IMP_YN = #{dcImpYn},
			    DC_IMP_ETC = #{dcImpEtc},
			    DC_IMP_ETC_YN = #{dcImpEtcYn},
			    EVLTN_A_YN = #{evltnAYn},
			    EVLTN_B_YN = #{evltnBYn},
			    EVLTN_C_YN = #{evltnCYn},
			    DC_CON_2_YN = #{dcCon2Yn},
			    DC_CON_4_YN = #{dcCon4Yn},
			    DC_CON_6_YN = #{dcCon6Yn},
			    DC_CON_8_YN = #{dcCon8Yn},
			    DC_CON_ETC = #{dcConEtc},
			    DC_CON_ETC_YN = #{dcConEtcYn},
			    DC_GIN_2_YN = #{dcGin2Yn},
			    DC_GIN_4_YN = #{dcGin4Yn},
			    DC_GIN_6_YN = #{dcGin6Yn},
			    DC_GIN_8_YN = #{dcGin8Yn},
			    DC_GIN_ETC = #{dcGinEtc},
			    DC_GIN_ETC_YN = #{dcGinEtcYn},
			    H_2_YN = #{h2Yn},
			    H_4_YN = #{h4Yn},
			    H_6_YN = #{h6Yn},
			    H_8_YN = #{h8Yn},
			    H_ETC = #{hEtc},
			    H_ETC_YN = #{hEtcYn},
			    V_2_YN = #{v2Yn},
			    V_4_YN = #{v4Yn},
			    V_6_YN = #{v6Yn},
			    V_8_YN = #{v8Yn},
			    V_ETC = #{vEtc},
			    V_ETC_YN = #{vEtcYn},
			    MSRMN_YEAR = #{msrmnYear},
			    MSRMN_MON = #{msrmnMon},
			    MSRMN_DAY = #{msrmnDay},
			    MSRMN_HOUR = #{msrmnHour},
			    MSRMN_MIN = #{msrmnMin},
			    SIGN = #{sign},
			    <if test="signUrl != null and signUrl != ''">SIGN_URL = #{signUrl},</if>
			    RESULT_CODE = #{resultCode},
				INDRC_H_YN = #{indrcHYn},
				INDRC_H_RESULT_CODE = #{indrcHResultCode},
				INDRC_H_MEMO = #{indrcHMemo},
				INDRC_V_YN = #{cmntAYn},
				INDRC_V_RESULT_CODE  =#{indrcVResultCode},
				INDRC_V_MEMO = #{indrcVMemo},
				CMNT_A_YN = #{cmntAYn},
				CMNT_ETC = #{cmntEtc},
				CMNT_ETC_YN = #{cmntEtcYn},
				UDT_MEM_ID = #{udtMemId}			
	</insert>

	<insert id="insertEsdSub">
		INSERT INTO METHOD_ESD_SUB_TB
		(
			ESD_SEQ,
			DRCTL,
			DC_CODE,
			RESULT_CODE,
			MEMO
		)
		VALUES
		<foreach collection="MethodEsdSubList" item="item" separator=",">
		(
			#{esdSeq},
			#{item.drctl},
			#{item.dcCode},
			#{item.resultCode},
			#{item.memo}
		)
		</foreach>
	</insert>
	
	<update id="updateEsdSub">
		<foreach collection="MethodEsdSubList" item="item" separator=";">
		UPDATE METHOD_ESD_SUB_TB
		SET
			DRCTL = #{item.drctl},
			DC_CODE = #{item.dcCode},
			RESULT_CODE = #{item.resultCode},
			MEMO = #{item.memo},
			STATE = #{item.state}
		WHERE ESD_SUB_SEQ = #{item.esdSubSeq}
		</foreach>
	</update>

	<update id="deleteEsdSub">
		<foreach collection="MethodEsdSubList" item="item" separator=";">
		UPDATE METHOD_ESD_SUB_TB
		SET
			STATE = #{item.state}
		WHERE ESD_SUB_SEQ = #{item.esdSubSeq}
		</foreach>
	</update>
	
	<select id="rsDetail" parameterType="int" resultType="rsDTO">
		SELECT 
			RS_SEQ,
		    RAW_SEQ,
		    VLT_AC_YN,
		    VLT_ETC,
		    VLT_ETC_YN,
		    VAR_N_YN,
		    VAR_Y_YN,
		    ROOM1_YN,
		    ROOM2_YN,
		    ROOM_ETC,
		    ROOM_ETC_YN,
		    TEMP,
		    HMDT,
		    BRMT,
		    MDLT_AM_YN,
		    MDLT_ETC,
		    MDLT_ETC_YN,
		    ANTN_1M_YN,
		    ANTN_3M_YN,
		    SWEP_15_YN,
		    SWEP_1S_YN,
		    STRN_1_YN,
		    STRN_3_YN,
		    STRN_10_YN,
		    STRN_ETC,
		    STRN_ETC_YN,
		    ACRDT_FRONT_YN,
		    ACRDT_BACK_YN,
		    ACRDT_LEFT_YN,
		    ACRDT_RIGHT_YN,
		    ACRDT_ETC,
		    ACRDT_ETC_YN,
		    EVLTN_A_YN,
		    EVLTN_B_YN,
		    EVLTN_C_YN,
		    FRQNC_AREA,
		    SPC_FRQNC,
		    MSRMN_YEAR,
		    MSRMN_MON,
		    MSRMN_DAY,
		    MSRMN_HOUR,
		    MSRMN_MIN,
		    SIGN,
		    <![CDATA[concat('/file/getImage.do?atchFileId=',SIGN_URL,'&fileSn=0') SIGN_URL,]]>
		    RESULT_CODE,
		    H_F_CODE,
		    H_B_CODE,
		    H_R_CODE,
		    H_L_CODE,
		    V_F_CODE,
		    V_B_CODE,
		    V_R_CODE,
		    V_L_CODE,
		    AUDIO_ELCT_YN,
		    AUDIO_ACST_YN,
		    AUDIO_NEAR_YN,
		    AUDIO_FEAR_YN,
		    AUDIO1_CODE,
		    AUDIO2_CODE,
		    SPKR_ELCT_YN,
		    SPKR_ACST_YN,
		    SPKR_NEAR_YN,
		    SPKR_FEAR_YN,
		    SPKR1_CODE,
		    SPKR2_CODE,
		    COMM1_NOISE_YN,
		    COMM1_ACST_YN,
		    COMM1_CODE1,
		    COMM1_CODE2,
		    COMM2_NOISE_YN,
		    COMM2_ACST_YN,
		    COMM2_CODE1,
		    COMM2_CODE2,
		    CMNT_A_YN,
		    CMNT_ETC,
		    CMNT_ETC_YN
		FROM METHOD_RS_TB
		WHERE 1=1
		AND RAW_SEQ = #{rawSeq}
	</select>
	
	<insert id="insertRs" parameterType="rsDTO">
		<selectKey resultType="int" keyProperty="rsSeq" order="BEFORE">
	        SELECT ifnull(MAX(RS_SEQ)+1,1) rsSeq FROM METHOD_RS_TB
	    </selectKey>
		INSERT INTO METHOD_RS_TB
		(
			RS_SEQ,
			RAW_SEQ,
			VLT_AC_YN,
			VLT_ETC,
			VLT_ETC_YN,
			VAR_N_YN,
			VAR_Y_YN,
			ROOM1_YN,
			ROOM2_YN,
			ROOM_ETC,
			ROOM_ETC_YN,
			TEMP,
			TEMP_PLUS,
			HMDT,
			HMDT_PLUS,
			BRMT,
			BRMT_PLUS,
			MDLT_AM_YN,
			MDLT_ETC,
			MDLT_ETC_YN,
			ANTN_1M_YN,
			ANTN_3M_YN,
			SWEP_15_YN,
			SWEP_1S_YN,
			STRN_1_YN,
			STRN_3_YN,
			STRN_10_YN,
			STRN_ETC,
			STRN_ETC_YN,
			ACRDT_FRONT_YN,
			ACRDT_BACK_YN,
			ACRDT_LEFT_YN,
			ACRDT_RIGHT_YN,
			ACRDT_ETC,
			ACRDT_ETC_YN,
			EVLTN_A_YN,
			EVLTN_B_YN,
			EVLTN_C_YN,
			FRQNC_AREA,
			SPC_FRQNC,
			MSRMN_YEAR,
			MSRMN_MON,
			MSRMN_DAY,
			MSRMN_HOUR,
			MSRMN_MIN,
			SIGN,
			SIGN_URL,
			RESULT_CODE,
			H_F_CODE,
			H_B_CODE,
			H_R_CODE,
			H_L_CODE,
			V_F_CODE,
			V_B_CODE,
			V_R_CODE,
			V_L_CODE,
			AUDIO_ELCT_YN,
			AUDIO_ACST_YN,
			AUDIO_NEAR_YN,
			AUDIO_FEAR_YN,
			AUDIO1_CODE,
			AUDIO2_CODE,
			SPKR_ELCT_YN,
			SPKR_ACST_YN,
			SPKR_NEAR_YN,
			SPKR_FEAR_YN,
			SPKR1_CODE,
			SPKR2_CODE,
			COMM1_NOISE_YN,
			COMM1_ACST_YN,
			COMM1_CODE1,
			COMM1_CODE2,
			COMM2_NOISE_YN,
			COMM2_ACST_YN,
			COMM2_CODE1,
			COMM2_CODE2,
			CMNT_A_YN,
			CMNT_ETC,
			CMNT_ETC_YN,
			INS_MEM_ID,
			UDT_MEM_ID
		)
		VALUES
		(
			#{rsSeq},	
			#{rawSeq},
			#{vltAcYn},
			#{vltEtc},
			#{vltEtcYn},
			#{varNYn},
			#{varYYn},
			#{room1Yn},
			#{room2Yn},
			#{roomEtc},
			#{roomEtcYn},
			#{temp},
			#{tempPlus},
			#{hmdt},
			#{hmdtPlus},
			#{brmt},
			#{brmtPlus},
			#{mdltAmYn},
			#{mdltEtc},
			#{mdltEtcYn},
			#{antn1mYn},
			#{antn3mYn},
			#{swep15Yn},
			#{swep1sYn},
			#{strn1Yn},
			#{strn3Yn},
			#{strn10Yn},
			#{strnEtc},
			#{strnEtcYn},
			#{acrdtFrontYn},
			#{acrdtBackYn},
			#{acrdtLeftYn},
			#{acrdtRightYn},
			#{acrdtEtc},
			#{acrdtEtcYn},
			#{evltnAYn},
			#{evltnBYn},
			#{evltnCYn},
			#{frqncArea},
			#{spcFrqnc},
			#{msrmnYear},
			#{msrmnMon},
			#{msrmnDay},
			#{msrmnHour},
			#{msrmnMin},
			#{sign},
			#{signUrl},
			#{resultCode},
			#{hFCode},
			#{hBCode},
			#{hRCode},
			#{hLCode},
			#{vFCode},
			#{vBCode},
			#{vRCode},
			#{vLCode},
			#{audioElctYn},
			#{audioAcstYn},
			#{audioNearYn},
			#{audioFearYn},
			#{audio1Code},
			#{audio2Code},
			#{spkrElctYn},
			#{spkrAcstYn},
			#{spkrNearYn},
			#{spkrFearYn},
			#{spkr1Code},
			#{spkr2Code},
			#{comm1NoiseYn},
			#{comm1AcstYn},
			#{comm1Code1},
			#{comm1Code2},
			#{comm2NoiseYn},
			#{comm2AcstYn},
			#{comm2Code1},
			#{comm2Code2},
			#{cmntAYn},
			#{cmntEtc},
			#{cmntEtcYn},
			#{insMemId},
			#{udtMemId}
		)
		ON DUPLICATE KEY UPDATE
			  VLT_AC_YN = #{vltAcYn},
		      VLT_ETC = #{vltEtc},
		      VLT_ETC_YN = #{vltEtcYn},
		      VAR_N_YN = #{varNYn},
		      VAR_Y_YN = #{varYYn},
		      ROOM1_YN = #{room1Yn},
		      ROOM2_YN = #{room2Yn},
		      ROOM_ETC = #{roomEtc},
		      ROOM_ETC_YN = #{roomEtcYn},
		      TEMP = #{temp},
		      TEMP_PLUS = #{tempPlus},
		      HMDT = #{hmdt},
		      HMDT_PLUS = #{hmdtPlus},
		      BRMT = #{brmt},
		      BRMT_PLUS = #{brmtPlus},
		      MDLT_AM_YN = #{mdltAmYn},
		      MDLT_ETC = #{mdltEtc},
		      MDLT_ETC_YN = #{mdltEtcYn},
		      ANTN_1M_YN = #{antn1mYn},
		      ANTN_3M_YN = #{antn3mYn},
		      SWEP_15_YN = #{swep15Yn},
		      SWEP_1S_YN = #{swep1sYn},
		      STRN_1_YN = #{strn1Yn},
		      STRN_3_YN = #{strn3Yn},
		      STRN_10_YN = #{strn10Yn},
		      STRN_ETC = #{strnEtc},
		      STRN_ETC_YN = #{strnEtcYn},
		      ACRDT_FRONT_YN = #{acrdtFrontYn},
		      ACRDT_BACK_YN = #{acrdtBackYn},
		      ACRDT_LEFT_YN = #{acrdtLeftYn},
		      ACRDT_RIGHT_YN = #{acrdtRightYn},
		      ACRDT_ETC = #{acrdtEtc},
		      ACRDT_ETC_YN = #{acrdtEtcYn},
		      EVLTN_A_YN = #{evltnAYn},
		      EVLTN_B_YN = #{evltnBYn},
		      EVLTN_C_YN = #{evltnCYn},
		      FRQNC_AREA = #{frqncArea},
		      SPC_FRQNC = #{spcFrqnc},
		      MSRMN_YEAR = #{msrmnYear},
		      MSRMN_MON = #{msrmnMon},
		      MSRMN_DAY = #{msrmnDay},
		      MSRMN_HOUR = #{msrmnHour},
		      MSRMN_MIN = #{msrmnMin},
		      SIGN = #{sign},
		      <if test="signUrl != null and signUrl != ''">SIGN_URL = #{signUrl},</if>
		      RESULT_CODE = #{resultCode},
		      H_F_CODE = #{hFCode},
		      H_B_CODE = #{hBCode},
		      H_R_CODE = #{hRCode},
		      H_L_CODE = #{hLCode},
		      V_F_CODE = #{vFCode},
		      V_B_CODE = #{vBCode},
		      V_R_CODE = #{vRCode},
		      V_L_CODE = #{vLCode},
		      AUDIO_ELCT_YN = #{audioElctYn},
		      AUDIO_ACST_YN = #{audioAcstYn},
		      AUDIO_NEAR_YN = #{audioNearYn},
		      AUDIO_FEAR_YN = #{audioFearYn},
		      AUDIO1_CODE = #{audio1Code},
			  AUDIO2_CODE = #{audio2Code},
			  SPKR_ELCT_YN = #{spkrElctYn},
			  SPKR_ACST_YN = #{spkrAcstYn},
			  SPKR_NEAR_YN = #{spkrNearYn},
			  SPKR_FEAR_YN = #{spkrFearYn},
			  SPKR1_CODE = #{spkr1Code},
			  SPKR2_CODE = #{spkr2Code},
			  COMM1_NOISE_YN = #{comm1NoiseYn},
			  COMM1_ACST_YN = #{comm1AcstYn},
			  COMM1_CODE1 = #{comm1Code1},
			  COMM1_CODE2 = #{comm1Code2},
			  COMM2_NOISE_YN = #{comm2NoiseYn},
			  COMM2_ACST_YN = #{comm2AcstYn},
			  COMM2_CODE1 = #{comm2Code1},
			  COMM2_CODE2 = #{comm2Code2},
			  CMNT_A_YN = #{cmntAYn},
			  CMNT_ETC = #{cmntEtc},
			  CMNT_ETC_YN = #{cmntEtcYn},
			  UDT_MEM_ID = #{udtMemId}
	</insert>
	
	<select id="eftDetail" parameterType="int" resultType="eftDTO">
		SELECT 
			EFT_SEQ,
		    RAW_SEQ,
		    VLT_AC_YN, VLT_ETC, VLT_ETC_YN,
		    VAR_N_YN, VAR_Y_YN,
		    ROOM1_YN, ROMM2_YN, ROOM_ETC, ROOM_ETC_YN,
		    TEMP, TEMP_PLUS, HMDT, HMDT_PLUS, BRMT, BRMT_PLUS,
		    AC_POWER, DC_POWER, COMM_TML,
		    EVLTN_A_YN, EVLTN_B_YN, EVLTN_C_YN,
		    RPTTN_5_YN, RPTTN_100_YN,
		    ACRDT_1_YN, ACRDT_2_YN, ACRDT_TRM_YN, ACRDT_TRM_ETC_YN,
		    MSRMN_YEAR, MSRMN_MON, MSRMN_DAY, MSRMN_HOUR, MSRMN_MIN,
		    SIGN, <![CDATA[concat('/file/getImage.do?atchFileId=',SIGN_URL,'&fileSn=0') SIGN_URL,]]>
		    RESULT_CODE,
		    POWER_L_YN, POWER_N_YN, POWER_PE_YN, POWER_ETC, POWER_ETC_YN,
		    POWER_LN_YN, POWER_LPE_YN, POWER_NPE_YN, POWER_LNPE_YN, POWER_ETC1, POWER_ETC2,
		    DC_POWER_P_YN, DC_POWER_N_YN, DC_POWER_PN_YN,
		    SGNL_ETC1, SGNL_ETC1_YN, SGNL_ETC2, SGNL_ETC2_YN, SGNL_ETC3, SGNL_ETC3_YN,
		    POWER_L_CODE, POWER_LN_CODE, POWER_LNPE_CODE, POWER_ETC1_CODE, POWER_ETC2_CODE,
		    DC_POWER_P_CODE, SGN_ETC1_CODE, SGN_ETC2_CODE, SGN_ETC3_CODE,
		    CMNT_A_YN, CMNT_ETC, CMNT_ETC_YN
		FROM METHOD_EFT_TB
		WHERE 1=1
		AND RAW_SEQ = #{rawSeq}
	</select>
	
	<insert id="insertEft" parameterType="eftDTO">
		<selectKey resultType="int" keyProperty="eftSeq" order="BEFORE">
	        SELECT ifnull(MAX(EFT_SEQ)+1,1) EftSeq FROM METHOD_EFT_TB
	    </selectKey>
		INSERT INTO METHOD_EFT_TB
		(
			EFT_SEQ,
			RAW_SEQ,
			VLT_AC_YN, VLT_ETC, VLT_ETC_YN, VAR_N_YN, VAR_Y_YN,
			ROOM1_YN, ROMM2_YN, ROOM_ETC, ROOM_ETC_YN,
			TEMP, TEMP_PLUS, HMDT, HMDT_PLUS, BRMT, BRMT_PLUS,
			AC_POWER, DC_POWER, COMM_TML,
			EVLTN_A_YN, EVLTN_B_YN, EVLTN_C_YN,
			RPTTN_5_YN, RPTTN_100_YN,
			ACRDT_1_YN, ACRDT_2_YN, ACRDT_TRM_YN, ACRDT_TRM_ETC_YN,
			MSRMN_YEAR, MSRMN_MON, MSRMN_DAY, MSRMN_HOUR, MSRMN_MIN,
			SIGN, SIGN_URL,
			RESULT_CODE,
			POWER_L_YN, POWER_N_YN, POWER_PE_YN, POWER_ETC, POWER_ETC_YN,
			POWER_LN_YN, POWER_LPE_YN, POWER_NPE_YN, POWER_LNPE_YN, 
			POWER_ETC1, POWER_ETC2, POWER_ETC3, POWER_ETC4, POWER_ETC5, POWER_ETC6,
			POWER_ETC1_YN, POWER_ETC2_YN, POWER_ETC3_YN, POWER_ETC4_YN, POWER_ETC5_YN, POWER_ETC6_YN,
			DC_POWER_P_YN, DC_POWER_N_YN, DC_POWER_PN_YN,
			SGNL_ETC1, SGNL_ETC1_YN, SGNL_ETC2,
			SGNL_ETC2_YN,
			SGNL_ETC3,
			SGNL_ETC3_YN,
			POWER_L_CODE,
			POWER_LN_CODE,
			POWER_LNPE_CODE,
			POWER_ETC1_CODE,
			POWER_ETC2_CODE,
			DC_POWER_P_CODE,
			SGN_ETC1_CODE,
			SGN_ETC2_CODE,
			SGN_ETC3_CODE,
			CMNT_A_YN,
			CMNT_ETC,
			CMNT_ETC_YN,
			INS_MEM_ID,
			UDT_MEM_ID
		)
		VALUES
		(
			#{eftSeq},
			#{rawSeq},
			#{vltAcYn},
			#{vltEtc},
			#{vltEtcYn},
			#{varNYn},
			#{varYYn},
			#{room1Yn},
			#{romm2Yn},
			#{roomEtc},
			#{roomEtcYn},
			#{temp},
			#{tempPlus},
			#{hmdt},
			#{hmdtPlus},
			#{brmt},
			#{brmtPlus},
			#{acPower},
			#{dcPower},
			#{commTml},
			#{evltnAYn},
			#{evltnBYn},
			#{evltnCYn},
			#{rpttn5Yn},
			#{rpttn100Yn},
			#{acrdt1Yn},
			#{acrdt2Yn},
			#{acrdtTrmYn},
			#{acrdtTrmEtcYn},
			#{msrmnYear},
			#{msrmnMon},
			#{msrmnDay},
			#{msrmnHour},
			#{msrmnMin},
			#{sign},
			#{signUrl},
			#{resultCode},
			#{powerLYn},
			#{powerNYn},
			#{powerPeYn},
			#{powerEtc},
			#{powerEtcYn},
			#{powerLnYn},
			#{powerLpeYn},
			#{powerNpeYn},
			#{powerLnpeYn},
			#{powerEtc1}, #{powerEtc2}, #{powerEtc3}, #{powerEtc4}, #{powerEtc5}, #{powerEtc6},
			#{powerEtc1Yn}, #{powerEtc2Yn}, #{powerEtc3Yn}, #{powerEtc4Yn}, #{powerEtc5Yn}, #{powerEtc6Yn},
			#{dcPowerPYn},
			#{dcPowerNYn},
			#{dcPowerPnYn},
			#{sgnlEtc1},
			#{sgnlEtc1Yn},
			#{sgnlEtc2},
			#{sgnlEtc2Yn},
			#{sgnlEtc3},
			#{sgnlEtc3Yn},
			#{powerLCode},
			#{powerLnCode},
			#{powerLnpeCode},
			#{powerEtc1Code},
			#{powerEtc2Code},
			#{dcPowerPCode},
			#{sgnEtc1Code},
			#{sgnEtc2Code},
			#{sgnEtc3Code},
			#{cmntAYn},
			#{cmntEtc},
			#{cmntEtcYn},
			#{insMemId},
			#{udtMemId}
		)
		ON DUPLICATE KEY UPDATE
			VLT_AC_YN = #{vltAcYn},
		    VLT_ETC = #{vltEtc},
		    VLT_ETC_YN = #{vltEtcYn},
		    VAR_N_YN = #{varNYn},
		    VAR_Y_YN = #{varYYn},
		    ROOM1_YN = #{room1Yn},
		    ROMM2_YN = #{romm2Yn},
		    ROOM_ETC = #{roomEtc},
		    ROOM_ETC_YN = #{roomEtcYn},
		    TEMP = #{temp},
		    TEMP_PLUS = #{tempPlus},
		    HMDT = #{hmdt},
		    HMDT_PLUS = #{hmdtPlus},
		    BRMT = #{brmt},
		    BRMT_PLUS = #{brmtPlus},
		    AC_POWER = #{acPower},
		    DC_POWER = #{dcPower},
		    COMM_TML = #{commTml},
		    EVLTN_A_YN = #{evltnAYn},
		    EVLTN_B_YN = #{evltnBYn},
		    EVLTN_C_YN = #{evltnCYn},
		    RPTTN_5_YN = #{rpttn5Yn},
		    RPTTN_100_YN = #{rpttn100Yn},
		    ACRDT_1_YN = #{acrdt1Yn},
		    ACRDT_2_YN = #{acrdt2Yn},
		    ACRDT_TRM_YN = #{acrdtTrmYn},
		    ACRDT_TRM_ETC_YN = #{acrdtTrmEtcYn},
		    MSRMN_YEAR = #{msrmnYear},
		    MSRMN_MON = #{msrmnMon},
		    MSRMN_DAY = #{msrmnDay},
		    MSRMN_HOUR = #{msrmnHour},
		    MSRMN_MIN = #{msrmnMin},
		    SIGN = #{sign},
		    <if test="signUrl != null and signUrl != ''">SIGN_URL = #{signUrl},</if>
		    RESULT_CODE = #{resultCode},
		    POWER_L_YN = #{powerLYn},
		    POWER_N_YN = #{powerNYn},
		    POWER_PE_YN = #{powerPeYn},
		    POWER_ETC = #{powerEtc},
		    POWER_ETC_YN = #{powerEtcYn},
		    POWER_LN_YN = #{powerLnYn},
		    POWER_LPE_YN = #{powerLpeYn},
		    POWER_NPE_YN = #{powerNpeYn},
		    POWER_LNPE_YN = #{powerLnpeYn},
		    POWER_ETC1 = #{powerEtc1},
		    POWER_ETC2 = #{powerEtc2},
		    POWER_ETC3 = #{powerEtc3},
		    POWER_ETC4 = #{powerEtc4},
		    POWER_ETC5 = #{powerEtc5},
		    POWER_ETC6 = #{powerEtc6},
		    POWER_ETC1_YN = #{powerEtc1Yn},
		    POWER_ETC2_YN = #{powerEtc2Yn},
		    POWER_ETC3_YN = #{powerEtc3Yn},
		    POWER_ETC4_YN = #{powerEtc4Yn},
		    POWER_ETC5_YN = #{powerEtc5Yn},
		    POWER_ETC6_YN = #{powerEtc6Yn},
		    DC_POWER_P_YN = #{dcPowerPYn},
		    DC_POWER_N_YN = #{dcPowerNYn},
		    DC_POWER_PN_YN = #{dcPowerPnYn},
		    SGNL_ETC1 = #{sgnlEtc1},
		    SGNL_ETC1_YN = #{sgnlEtc1Yn},
		    SGNL_ETC2 = #{sgnlEtc2},
		    SGNL_ETC2_YN = #{sgnlEtc2Yn},
	        SGNL_ETC3 = #{sgnlEtc3},
	        SGNL_ETC3_YN = #{sgnlEtc3Yn},
	        POWER_L_CODE = #{powerLCode},
	        POWER_LN_CODE = #{powerLnCode},
	        POWER_LNPE_CODE = #{powerLnpeCode},
	        POWER_ETC1_CODE = #{powerEtc1Code},
	        POWER_ETC2_CODE = #{powerEtc2Code},
	        DC_POWER_P_CODE = #{dcPowerPCode},
	        SGN_ETC1_CODE = #{sgnEtc1Code},
	        SGN_ETC2_CODE = #{sgnEtc2Code},
	        SGN_ETC3_CODE = #{sgnEtc3Code},
	        CMNT_A_YN = #{cmntAYn},
	        CMNT_ETC = #{cmntEtc},
	        CMNT_ETC_YN = #{cmntEtcYn},
	        UDT_MEM_ID = #{udtMemId}
	</insert>
	
	<select id="surgeDetail" parameterType="int" resultType="surgeDTO">
		SELECT 
			SURGE_SEQ, RAW_SEQ,
		    VLT_AC_YN, VLT_ETC, VLT_ETC_YN, VAR_N_YN, VAR_Y_YN,
		    ROOM1_YN, ROOM2_YN, ROOM_ETC, ROOM_ETC_YN,
		    TEMP, TEMP_PLUS, HMDT, HMDT_PLUS, BRMT, BRMT_PLUS,
		    POWER_LINE, POWER_PE, DC_POWER_PN,
		    COMM_TML_PE, COMM_TML_LINE,
		    OPEN_CRCT_50_YN, OPEN_CRCT_700_YN, SHRT_CRCT_20_YN, SHRT_CRCT_ETC, SHRT_CRCT_ETC_YN,
		    ACRDT_YN, PHASE_0_YN, PHASE_90_YN, PHASE_180_YN, PHASE_270_YN,
		    RPTTN_20_YN, RPTTN_60_YN,
		    EVLTN_A_YN, EVLTN_B_YN, EVLTN_C_YN,
		    COUPLING_18_YN, COUPLING_10_YN, COUPLING_40_YN,
		    MSRMN_YEAR, MSRMN_MON, MSRMN_DAY, MSRMN_HOUR, MSRMN_MIN,
		    SIGN, <![CDATA[concat('/file/getImage.do?atchFileId=',SIGN_URL,'&fileSn=0') SIGN_URL,]]>
		    RESULT_CODE,
		    POWER_LN_YN, POWER_LN_ETC, POWER_LN_ETC_YN, POWER_LPE_YN, POWER_NPE_YN,
		    POWER_ECT1_YN, POWER_ECT2_YN, POWER_ECT3_YN, POWER_ECT4_YN, POWER_ECT5_YN, POWER_ECT6_YN,
		    POWER_ECT1, POWER_ECT2, POWER_ECT3, POWER_ECT4, POWER_ECT5, POWER_ECT6,
		    DC_POWER_PN_YN, DC_POWER_ETC_YN, DC_POWER_ETC, DC_POWER_TEXT,
		    SGNL1, SGNL2,
		    POWER_LN_CODE, POWER_LPE_CODE, POWER_ECT1_CODE, POWER_ECT2_CODE,
		    DC_POWER_PN_CODE, DC_POWER_ETC_CODE, SGNL1_CODE, SGNL2_CODE,
		    CMNT_A_YN, CMNT_ETC, CMNT_ETC_YN
		FROM METHOD_SURGE_TB
		WHERE 1=1
		AND RAW_SEQ = #{rawSeq}
	</select>
	<insert id="insertSurge" parameterType="surgeDTO">
		<selectKey resultType="int" keyProperty="surgeSeq" order="BEFORE">
	        SELECT ifnull(MAX(SURGE_SEQ)+1,1) surgeSeq FROM METHOD_SURGE_TB
	    </selectKey>
	    INSERT INTO METHOD_SURGE_TB
		(
			SURGE_SEQ, RAW_SEQ,
		    VLT_AC_YN, VLT_ETC, VLT_ETC_YN, VAR_N_YN, VAR_Y_YN,
		    ROOM1_YN, ROOM2_YN, ROOM_ETC, ROOM_ETC_YN,
		    TEMP, TEMP_PLUS, HMDT, HMDT_PLUS, BRMT, BRMT_PLUS,
		    POWER_LINE, POWER_PE, DC_POWER_PN,
		    COMM_TML_PE, COMM_TML_LINE,
		    OPEN_CRCT_50_YN, OPEN_CRCT_700_YN, SHRT_CRCT_20_YN, SHRT_CRCT_ETC, SHRT_CRCT_ETC_YN,
		    ACRDT_YN, PHASE_0_YN, PHASE_90_YN, PHASE_180_YN, PHASE_270_YN,
		    RPTTN_20_YN, RPTTN_60_YN,
		    EVLTN_A_YN, EVLTN_B_YN, EVLTN_C_YN,
		    COUPLING_18_YN, COUPLING_10_YN, COUPLING_40_YN,
		    MSRMN_YEAR, MSRMN_MON, MSRMN_DAY, MSRMN_HOUR, MSRMN_MIN,
		    SIGN, SIGN_URL,
		    RESULT_CODE,
		    POWER_LN_YN, POWER_LN_ETC, POWER_LN_ETC_YN, POWER_LPE_YN, POWER_NPE_YN,
		    POWER_ECT1_YN, POWER_ECT2_YN, POWER_ECT3_YN, POWER_ECT4_YN, POWER_ECT5_YN, POWER_ECT6_YN,
		    POWER_ECT1, POWER_ECT2, POWER_ECT3, POWER_ECT4, POWER_ECT5, POWER_ECT6,
		    DC_POWER_PN_YN, DC_POWER_ETC_YN, DC_POWER_ETC, DC_POWER_TEXT,
		    SGNL1, SGNL2,
		    POWER_LN_CODE, POWER_LPE_CODE, POWER_ECT1_CODE, POWER_ECT2_CODE,
		    DC_POWER_PN_CODE, DC_POWER_ETC_CODE, SGNL1_CODE, SGNL2_CODE,
		    CMNT_A_YN, CMNT_ETC, CMNT_ETC_YN,
		    INS_MEM_ID, UDT_MEM_ID
		)
		VALUES 
		(
			#{surgeSeq}, #{rawSeq},
			#{vltAcYn}, #{vltEtc}, #{vltEtcYn}, #{varNYn}, #{varYYn},
			#{room1Yn}, #{room2Yn}, #{roomEtc}, #{roomEtcYn},
			#{temp}, #{tempPlus}, #{hmdt}, #{hmdtPlus}, #{brmt}, #{brmtPlus},
			#{powerLine}, #{powerPe}, #{dcPowerPn},
			#{commTmlPe}, #{commTmlLine},
			#{openCrct50Yn}, #{openCrct700Yn}, #{shrtCrct20Yn}, #{shrtCrctEtc}, #{shrtCrctEtcYn},
			#{acrdtYn}, #{phase0Yn}, #{phase90Yn}, #{phase180Yn}, #{phase270Yn},
			#{rpttn20Yn}, #{rpttn60Yn},
			#{evltnAYn}, #{evltnBYn}, #{evltnCYn},
			#{coupling18Yn}, #{coupling10Yn}, #{coupling40Yn},
			#{msrmnYear}, #{msrmnMon}, #{msrmnDay}, #{msrmnHour}, #{msrmnMin},
			#{sign}, #{signUrl},
			#{resultCode},
			#{powerLnYn}, #{powerLnEtc}, #{powerLnEtcYn}, #{powerLpeYn}, #{powerNpeYn},
			#{powerEct1Yn}, #{powerEct2Yn}, #{powerEct3Yn}, #{powerEct4Yn}, #{powerEct5Yn}, #{powerEct6Yn},
			#{powerEct1}, #{powerEct2}, #{powerEct3}, #{powerEct4}, #{powerEct5}, #{powerEct6},
			#{dcPowerPnYn}, #{dcPowerEtcYn}, #{dcPowerEtc}, #{dcPowerText},
			#{sgnl1}, #{sgnl2},
			#{powerLnCode}, #{powerLpeCode}, #{powerEct1Code}, #{powerEct2Code},
			#{dcPowerPnCode}, #{dcPowerEtcCode},
			#{sgnl1Code}, #{sgnl2Code},
			#{cmntAYn}, #{cmntEtc}, #{cmntEtcYn},
			#{insMemId},#{udtMemId}
		)
		ON DUPLICATE KEY UPDATE
			VLT_AC_YN = #{vltAcYn},
			VLT_ETC = #{vltEtc},
			VLT_ETC_YN = #{vltEtcYn},
			VAR_N_YN = #{varNYn},
			VAR_Y_YN = #{varYYn},
			ROOM1_YN = #{room1Yn},
			ROOM2_YN = #{room2Yn},
			ROOM_ETC = #{roomEtc},
			ROOM_ETC_YN = #{roomEtcYn},
			TEMP = #{temp},
			TEMP_PLUS = #{tempPlus},
			HMDT = #{hmdt},
			HMDT_PLUS = #{hmdtPlus},
			BRMT = #{brmt},
			BRMT_PLUS = #{brmtPlus},
			POWER_LINE = #{powerLine},
			POWER_PE = #{powerPe},
			DC_POWER_PN = #{dcPowerPn},
			COMM_TML_PE = #{commTmlPe},
			COMM_TML_LINE = #{commTmlLine},
			OPEN_CRCT_50_YN = #{openCrct50Yn},
			OPEN_CRCT_700_YN = #{openCrct700Yn},
			SHRT_CRCT_20_YN = #{shrtCrct20Yn},
			SHRT_CRCT_ETC = #{shrtCrctEtc},
			SHRT_CRCT_ETC_YN = #{shrtCrctEtcYn},
			ACRDT_YN = #{acrdtYn},
			PHASE_0_YN = #{phase0Yn},
			PHASE_90_YN = #{phase90Yn},
			PHASE_180_YN = #{phase180Yn},
			PHASE_270_YN = #{phase270Yn},
			RPTTN_20_YN = #{rpttn20Yn},
			RPTTN_60_YN = #{rpttn60Yn},
			EVLTN_A_YN = #{evltnAYn},
			EVLTN_B_YN = #{evltnBYn},
			EVLTN_C_YN = #{evltnCYn},
			COUPLING_18_YN = #{coupling18Yn},
			COUPLING_10_YN = #{coupling10Yn},
			COUPLING_40_YN = #{coupling40Yn},
			MSRMN_YEAR = #{msrmnYear},
			MSRMN_MON = #{msrmnMon},
			MSRMN_DAY = #{msrmnDay},
			MSRMN_HOUR = #{msrmnHour},
			MSRMN_MIN = #{msrmnMin},
			SIGN = #{sign},
			<if test="signUrl != null and signUrl != ''">SIGN_URL = #{signUrl},</if>
			RESULT_CODE = #{resultCode},
			POWER_LN_YN = #{powerLnYn},
			POWER_LN_ETC = #{powerLnEtc},
			POWER_LN_ETC_YN = #{powerLnEtcYn},
			POWER_LPE_YN = #{powerLpeYn},
			POWER_NPE_YN = #{powerNpeYn},
			POWER_ECT1_YN = #{powerEct1Yn},
			POWER_ECT2_YN = #{powerEct2Yn},
			POWER_ECT3_YN = #{powerEct3Yn},
			POWER_ECT4_YN = #{powerEct4Yn},
			POWER_ECT5_YN = #{powerEct5Yn},
			POWER_ECT6_YN = #{powerEct6Yn},
			POWER_ECT1 = #{powerEct1},
			POWER_ECT2 = #{powerEct2},
			POWER_ECT3 = #{powerEct3},
			POWER_ECT4 = #{powerEct4},
			POWER_ECT5 = #{powerEct5},
			POWER_ECT6 = #{powerEct6},
			DC_POWER_PN_YN = #{dcPowerPnYn},
			DC_POWER_ETC_YN = #{dcPowerEtcYn},
			DC_POWER_ETC = #{dcPowerEtc},
			DC_POWER_TEXT = #{dcPowerText},
			SGNL1 = #{sgnl1},
			SGNL2 = #{sgnl2},
			POWER_LN_CODE = #{powerLnCode},
			POWER_LPE_CODE = #{powerLpeCode},
			POWER_ECT1_CODE = #{powerEct1Code},
			POWER_ECT2_CODE = #{powerEct2Code},
			DC_POWER_PN_CODE = #{dcPowerPnCode},
			DC_POWER_ETC_CODE = #{dcPowerEtcCode},
			SGNL1_CODE = #{sgnl1Code},
			SGNL2_CODE = #{sgnl2Code},
			CMNT_A_YN = #{cmntAYn},
			CMNT_ETC = #{cmntEtc},
			CMNT_ETC_YN = #{cmntEtcYn},
			UDT_MEM_ID = #{udtMemId}
	</insert>	
</mapper>