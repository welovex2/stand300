<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="egovframework.cns.service.CnsMapper">

	<select id="selectListCnt" parameterType="comParam" resultType="int">
		select
			Count(CNS_TB.cns_seq)
		from CNS_TB
			inner join JOB_TB
            on CNS_TB.CNS_SEQ = JOB_TB.CNS_SEQ
            left join CMPY_TB
            on JOB_TB.CMPY_SEQ = CMPY_TB.CMPY_SEQ
            left join CMPY_MNG_TB
            on JOB_TB.CMPY_MNG_SEQ = CMPY_MNG_TB.CMPY_MNG_SEQ
            and CMPY_MNG_TB.STATE != 'D'
		where 1=1
		<if test="startDate != null and endDate != null">
        	and date_format(CNS_TB.ins_dt, '%Y%m%d') between date_format(#{startDate}, '%Y%m%d') and date_format(#{endDate}, '%Y%m%d')
        </if>
	</select>
	<select id="selectList" parameterType="comParam" resultType="egovMap">
		select
			CNS_TB.CNS_SEQ,
            date_format(CNS_TB.INS_DT, '%Y-%m-%d %T') ins_dt_str,
            IFNULL(FN_CODE_NAME(CMPY_TB.CMPY_CODE,'PT'), '') cmpy_type,
            CNS_TB.INS_MEM_ID ins_name,
		    CRTFC_TYPE,
            JOB_TB.PRDCT_NAME,
            
            /* 업체정보 */
            IFNULL(CMPY_TB.CMPY_NAME, JOB_TB.CMPY_NAME) CMPY_NAME,
            FN_GET_PHONE_FORMAT(IFNULL(CMPY_TB.CMPY_PHONE, JOB_TB.CMPY_PHONE)) CMPY_PHONE,
            FN_GET_PHONE_FORMAT(IFNULL(CMPY_MNG_TB.PHONE, JOB_TB.MNG_PHONE)) MNG_PHONE,
            
            /* 연결문서 정보 */
            IFNULL(FN_GET_SEQSTRING('Q',JOB_TB.QUO_YM,'G',JOB_TB.quo_seq),'-') QUO_ID,
            IFNULL(FN_GET_SEQSTRING('SB',JOB_TB.QUO_YM,'G',JOB_TB.quo_seq),'-') SBK_ID,
            
		    FN_LAST_CNS_MENO(CNS_TB.cns_seq) LAST_MEMO
		from CNS_TB
			inner join JOB_TB
            on CNS_TB.CNS_SEQ = JOB_TB.CNS_SEQ
            left join CMPY_TB
            on JOB_TB.CMPY_SEQ = CMPY_TB.CMPY_SEQ
            left join CMPY_MNG_TB
            on JOB_TB.CMPY_MNG_SEQ = CMPY_MNG_TB.CMPY_MNG_SEQ
            and CMPY_MNG_TB.STATE != 'D'
		where 1=1
		<if test="startDate != null and endDate != null">
        	and date_format(CNS_TB.ins_dt, '%Y%m%d') between date_format(#{startDate}, '%Y%m%d') and date_format(#{endDate}, '%Y%m%d')
        </if>
        order by CNS_TB.ins_dt desc
		LIMIT #{pageUnit} OFFSET #{firstIndex};
	</select>

	<resultMap type="cnsRes" id="cnsMap">
		<id column="cns_seq" property="cnsSeq"/>
		<result column="cns_seq" property="cnsSeq"/>
		<result column="cmpy_code" property="cmpyCode"/>
		<result column="cmpy_seq" property="cmpySeq"/>
		<result column="cmpy_mng_seq" property="cmpyMngSeq"/>
		<result column="cmpy_name" property="cmpyName"/>
		<result column="cmpy_phone" property="cmpyPhone"/>
		<result column="mng_name" property="mngName"/>
		<result column="mng_phone" property="mngPhone"/>
		<result column="prdct_name" property="prdctName"/>
		<result column="crtfc_type" property="crtfcType"/>
		<collection property="memoList" ofType="cnsHisDTO">
        	<id column="cns_his_seq" property="cnsHisSeq"/>
        	<result column="cns_seq" property="cnsSeq"/>
	        <result column="memo" property="memo"/>
    	    <result column="insDtStr" property="insDtStr"/>
       	 	<result column="ins_mem_id" property="insMem"/>
        </collection>
	</resultMap>
	<select id="selectDetail" parameterType="int" resultMap="cnsMap">
		select
			CNS_TB.CNS_SEQ,
            /* 업체정보 */
            ifnull((select cmpy_code from CMPY_TB where cmpy_seq = JOB_TB.CMPY_SEQ),'') cmpy_code,
            JOB_TB.CMPY_SEQ,
            JOB_TB.CMPY_MNG_SEQ,
			
			/* 회사번호 없는 경우 */
			JOB_TB.CMPY_NAME,
			IFNULL(FN_GET_PHONE_FORMAT(JOB_TB.CMPY_PHONE),'') cmpy_phone,
			JOB_TB.MNG_NAME,
			IFNULL(FN_GET_PHONE_FORMAT(JOB_TB.MNG_PHONE),'') mng_phone,
			            
            CNS_TB.CRTFC_TYPE,
            JOB_TB.PRDCT_NAME,
         
         	CNS_HIS_TB.CNS_HIS_SEQ,
			CNS_HIS_TB.MEMO,
            date_format(CNS_HIS_TB.INS_DT, '%Y-%m-%d %T') insDtStr,
            CNS_HIS_TB.INS_MEM_ID
            
		from CNS_TB
			inner join JOB_TB
            on CNS_TB.CNS_SEQ = JOB_TB.CNS_SEQ

			inner join CNS_HIS_TB
            on CNS_TB.CNS_SEQ = CNS_HIS_TB.CNS_SEQ
            and CNS_HIS_TB.STATE != 'D'            
		where CNS_TB.CNS_SEQ = #{cnsSeq}
		order by CNS_HIS_TB.ins_dt desc
	</select>
		
	<insert id="insert" parameterType="cnsReq" useGeneratedKeys="true" keyProperty="cnsSeq">
		<![CDATA[
			INSERT INTO CNS_TB
			(CRTFC_TYPE,
			INS_MEM_ID,
			UDT_MEM_ID)
			VALUES
			(#{crtfcType},
			#{insMemId},
			#{udtMemId});	
		]]>
	</insert>
	
	<update id="update" parameterType="cnsReq">
		<![CDATA[
			UPDATE CNS_TB
			SET
				CRTFC_TYPE = #{crtfcType},
				UDT_MEM_ID = #{udtMemId},
				UDT_DT = current_timestamp(),
				STATE = 'U'
			WHERE CNS_SEQ = #{cnsSeq};
		]]>
	</update>
	
	<insert id="insertMemo" parameterType="cnsReq" >
		<![CDATA[
			INSERT INTO CNS_HIS_TB
			(CNS_SEQ,
			MEMO,
			INS_MEM_ID,
			UDT_MEM_ID
			)
			VALUES
			(#{cnsSeq},
			#{memo},
			#{insMemId},
			#{udtMemId}
			);
		]]>
	</insert>
	
	<insert id="insertJob" parameterType="cnsReq" >
		INSERT INTO JOB_TB
		(	CNS_SEQ,
			CMPY_SEQ,
			CMPY_MNG_SEQ,
			<if test="cmpySeq == 0">
			CMPY_NAME,
			CMPY_PHONE,
			MNG_NAME,
			MNG_PHONE,
			</if>
			PRDCT_NAME,
			INS_MEM_ID,
			UDT_MEM_ID
		)
		VALUES
		(
		<![CDATA[
			#{cnsSeq},
			#{cmpySeq},
			#{cmpyMngSeq},
		]]>
			<if test="cmpySeq == 0">
		<![CDATA[
			#{cmpyName},
			#{cmpyPhone},
			#{mngName},
			#{mngPhone},
		]]>
			</if>
		<![CDATA[
			#{prdctName},
			#{insMemId},
			#{udtMemId}
		]]>
		)
	</insert>
	
	<update id="updateJob" parameterType="cnsReq">
		UPDATE JOB_TB
		SET
			CMPY_SEQ = #{cmpySeq},
			CMPY_MNG_SEQ = #{cmpyMngSeq},
			<if test="cmpySeq == 0">
		<![CDATA[
			CMPY_NAME = #{cmpyName},
			CMPY_PHONE = #{cmpyPhone},
			MNG_NAME = #{mngName},
			MNG_PHONE = #{mngPhone},
		]]>
			</if>
			<if test="cmpySeq > 0">
		<![CDATA[
			CMPY_NAME = '',
			CMPY_PHONE = '',
			MNG_NAME = '',
			MNG_PHONE = '',
		]]>
			</if>
		<![CDATA[
			PRDCT_NAME = #{prdctName},
			UDT_MEM_ID = #{udtMemId},
			UDT_DT = current_timestamp(),
			STATE = 'U'
		WHERE CNS_SEQ = #{cnsSeq};
		]]>
	</update>
</mapper>