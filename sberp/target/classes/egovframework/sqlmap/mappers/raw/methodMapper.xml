<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="egovframework.raw.service.MethodMapper">

	<insert id="insertCe" parameterType="ceDTO">
		<selectKey resultType="int" keyProperty="ceSeq" order="BEFORE">
	        SELECT ifnull(MAX(CE_SEQ)+1,1) ceSeq FROM METHOD_CE_TB
	    </selectKey>
		INSERT INTO METHOD_CE_TB
		(
			CE_SEQ,
			RAW_SEQ,
			VLT_AC_YN,
			VLT_ETC,
			VAR_N_YN,
			VAR_Y_YN,
			ROOM1_YN,
			ROOM2_YN,
			ROOM3_YN,
			TEMP,
			TEMP_PLUS,
			HMDT,
			HMDT_PLUS,
			MSRMN_YEAR,
			MSRMN_MON,
			MSRMN_DAY,
			MSRMN_HOUR,
			MSRMN_MIN,
			SIGN,
			SIGN_URL,
			RESULT_CODE,
			RESULT_URL,
			INS_MEM_ID,
			UDT_MEM_ID
		)
		VALUES
		(
			#{ceSeq},
			#{rawSeq},
			#{vltAcYn},
			#{vltEtc},
			#{varNYn},
			#{varYYn},
			#{room1Yn},
			#{room2Yn},
			#{room3Yn},
			#{temp},
			#{tempPlus},
			#{hmdt},
			#{hmdtPlus},
			#{msrmnYear},
			#{msrmnMon},
			#{msrmnDay},
			#{msrmnHour},
			#{msrmnMin},
			#{sign},
			#{signUrl},
			#{resultCode},
			#{resultUrl},
			#{insMemId},
			#{udtMemId}
		)
		ON DUPLICATE KEY UPDATE
			VLT_AC_YN = #{rawSeq},
			VLT_ETC = #{vltEtc},
			VAR_N_YN = #{varNYn},
			VAR_Y_YN = #{varYYn},
			ROOM1_YN = #{room1Yn},
			ROOM2_YN = #{room2Yn},
			ROOM3_YN = #{room3Yn},
			TEMP = #{temp},
			TEMP_PLUS = #{tempPlus},
			HMDT = #{hmdt},
			HMDT_PLUS = #{hmdtPlus},
			MSRMN_YEAR = #{msrmnYear},
			MSRMN_MON = #{msrmnMon},
			MSRMN_DAY = #{msrmnDay},
			MSRMN_HOUR = #{msrmnHour},
			MSRMN_MIN = #{msrmnMin},
			SIGN = #{sign},
			<if test="signUrl != null and signUrl != ''">SIGN_URL = #{signUrl},</if>
			RESULT_CODE = #{resultCode},
			<if test="resultUrl != null and resultUrl != ''">RESULT_URL = #{resultUrl},</if>
			UDT_MEM_ID = #{udtMemId}
	</insert>

	<insert id="insertMac">
		<foreach collection="macList" item="item" separator=";">
		INSERT INTO RAW_MAC_TB
		(
			RAW_MAC_SEQ,
			MACHINE_TYPE,
			RAW_SEQ,
			MACHINE_SEQ,
			USE_YN
		)
		VALUES
		(
			(SELECT IFNULL(MAX(RAW_MAC_SEQ) + 1, 1) FROM RAW_MAC_TB sub),
			#{machineType},
			#{rawSeq},
			#{item.machineSeq},
			#{item.useYn}
		)
		ON DUPLICATE KEY UPDATE
			USE_YN = #{item.useYn}
		</foreach>
	</insert>
	
	<select id="ceDetail" parameterType="int" resultType="ceDTO">
		SELECT CE_SEQ,
		    RAW_SEQ,
		    VLT_AC_YN,
		    VLT_ETC,
		    VAR_N_YN,
		    VAR_Y_YN,
		    ROOM1_YN,
		    ROOM2_YN,
		    ROOM3_YN,
		    TEMP,
		    TEMP_PLUS,
		    HMDT,
		    HMDT_PLUS,
		    MSRMN_YEAR,
		    MSRMN_MON,
		    MSRMN_DAY,
		    MSRMN_HOUR,
		    MSRMN_MIN,
		    SIGN,
		    SIGN_URL,
		    RESULT_CODE,
		    RESULT_URL
		FROM METHOD_CE_TB
		WHERE 1=1
		AND RAW_SEQ = #{rawSeq}
	</select>

	<select id="reDetail" parameterType="int" resultType="reDTO">
		SELECT RE_SEQ,
		    RAW_SEQ,
		    VLT_AC_YN,
		    VLT_ETC,
		    VAR_N_YN,
		    VAR_Y_YN,
		    HZ1_CODE,
		    HZ1_VLT10M_YN,
		    HZ1_VLT3M_YN,
		    HZ1_VLT_ETC1,
		    HZ1_VLT_ETC1_YN,
		    HZ1_VLT_ETC2,
		    HZ1_VLT_ETC2_YN,
		    HZ1_LNGTH_1M_YN,
		    HZ1_LNGTH_3M_YN,
		    HZ1_LNGTH_10M_YN,
		    HZ1_LNGTH_30M_YN,
		    HZ1_ANTN_2M_YN,
		    HZ1_ANTN_3M_YN,
		    HZ1_ANTN_4M_YN,
		    HZ1_TEMP,
		    HZ1_TEMP_PLUS,
		    HZ1_HMDT,
		    HZ1_HMDT_PLUS,
		    HZ1_MSRMN_YEAR,
		    HZ1_MSRMN_MON,
		    HZ1_MSRMN_DAY,
		    HZ1_MSRMN_HOUR,
		    HZ1_MSRMN_MIN,
		    HZ1_SIGN,
		    HZ1_SIGN_URL,
		    HZ1_RESULT_CODE,
		    HZ2_CODE,
		    HZ2_VLT10M_YN,
		    HZ2_VLT3M_YN,
		    HZ2_VLT_ETC1,
		    HZ2_VLT_ETC1_YN,
		    HZ2_VLT_ETC2,
		    HZ2_VLT_ETC2_YN,
		    HZ2_LNGTH_1M_YN,
		    HZ2_LNGTH_3M_YN,
		    HZ2_LNGTH_10M_YN,
		    HZ2_LNGTH_30M_YN,
		    HZ2_TEMP,
		    HZ2_TEMP_PLUS,
		    HZ2_HMDT,
		    HZ2_HMDT_PLUS,
		    HZ2_MSRMN_YEAR,
		    HZ2_MSRMN_MON,
		    HZ2_MSRMN_DAY,
		    HZ2_MSRMN_HOUR,
		    HZ2_MSRMN_MIN,
		    HZ2_SIGN,
		    HZ2_SIGN_URL,
		    HZ2_RESULT_CODE,
		    RESULT_URL,
		    INS_MEM_ID,
		    INS_DT,
		    UDT_MEM_ID,
		    UDT_DT,
		    STATE
		FROM METHOD_RE_TB
		WHERE 1=1
		AND RAW_SEQ = #{rawSeq}
	</select>
	
	<insert id="insertRe" parameterType="reDTO">
		<selectKey resultType="int" keyProperty="reSeq" order="BEFORE">
	        SELECT ifnull(MAX(RE_SEQ)+1,1) reSeq FROM METHOD_RE_TB
	    </selectKey>
		INSERT INTO METHOD_RE_TB
		(
			RE_SEQ,
			RAW_SEQ,
			VLT_AC_YN,
			VLT_ETC,
			VAR_N_YN,
			VAR_Y_YN,
			HZ1_CODE,
			HZ1_VLT10M_YN,
			HZ1_VLT3M_YN,
			HZ1_VLT_ETC1,
			HZ1_VLT_ETC1_YN,
			HZ1_VLT_ETC2,
			HZ1_VLT_ETC2_YN,
			HZ1_LNGTH_1M_YN,
			HZ1_LNGTH_3M_YN,
			HZ1_LNGTH_10M_YN,
			HZ1_LNGTH_30M_YN,
			HZ1_ANTN_2M_YN,
			HZ1_ANTN_3M_YN,
			HZ1_ANTN_4M_YN,
			HZ1_TEMP,
			HZ1_HMDT,
			HZ1_MSRMN_YEAR,
			HZ1_MSRMN_MON,
			HZ1_MSRMN_DAY,
			HZ1_MSRMN_HOUR,
			HZ1_MSRMN_MIN,
			HZ1_SIGN,
			HZ1_SIGN_URL,
			HZ1_RESULT_CODE,
			HZ2_CODE,
			HZ2_VLT10M_YN,
			HZ2_VLT3M_YN,
			HZ2_VLT_ETC1,
			HZ2_VLT_ETC1_YN,
			HZ2_VLT_ETC2,
			HZ2_VLT_ETC2_YN,
			HZ2_LNGTH_1M_YN,
			HZ2_LNGTH_3M_YN,
			HZ2_LNGTH_10M_YN,
			HZ2_LNGTH_30M_YN,
			HZ2_TEMP,
			HZ2_HMDT,
			HZ2_MSRMN_YEAR,
			HZ2_MSRMN_MON,
			HZ2_MSRMN_DAY,
			HZ2_MSRMN_HOUR,
			HZ2_MSRMN_MIN,
			HZ2_SIGN,
			HZ2_SIGN_URL,
			HZ2_RESULT_CODE,
			RESULT_URL,
			INS_MEM_ID,
			UDT_MEM_ID
		)
		VALUES
		(
			#{reSeq},
			#{rawSeq},
			#{vltAcYn},
			#{vltEtc},
			#{varNYn},
			#{varYYn},
			#{hz1Code},
			#{hz1Vlt10mYn},
			#{hz1Vlt3mYn},
			#{hz1VltEtc1},
			#{hz1VltEtc1Yn},
			#{hz1VltEtc2},
			#{hz1VltEtc2Yn},
			#{hz1Lngth1mYn},
			#{hz1Lngth3mYn},
			#{hz1Lngth10mYn},
			#{hz1Lngth30mYn},
			#{hz1Antn2mYn},
			#{hz1Antn3mYn},
			#{hz1Antn4mYn},
			#{hz1Temp},
			#{hz1Hmdt},
			#{hz1MsrmnYear},
			#{hz1MsrmnMon},
			#{hz1MsrmnDay},
			#{hz1MsrmnHour},
			#{hz1MsrmnMin},
			#{hz1Sign},
			#{hz1SignUrl},
			#{hz1ResultCode},
			#{hz2Code},
			#{hz2Vlt10mYn},
			#{hz2Vlt3mYn},
			#{hz2VltEtc1},
			#{hz2VltEtc1Yn},
			#{hz2VltEtc2},
			#{hz2VltEtc2Yn},
			#{hz2Lngth1mYn},
			#{hz2Lngth3mYn},
			#{hz2Lngth10mYn},
			#{hz2Lngth30mYn},
			#{hz2Temp},
			#{hz2Hmdt},
			#{hz2MsrmnYear},
			#{hz2MsrmnMon},
			#{hz2MsrmnDay},
			#{hz2MsrmnHour},
			#{hz2MsrmnMin},
			#{hz2Sign},
			#{hz2SignUrl},
			#{hz2ResultCode},
			#{resultUrl},
			#{insMemId},
			#{udtMemId}
		)
		ON DUPLICATE KEY UPDATE
			VLT_AC_YN = #{vltAcYn},
			VLT_ETC = #{vltEtc},
			VAR_N_YN = #{varNYn},
			VAR_Y_YN = #{varYYn},
			HZ1_CODE = #{hz1Code},
			HZ1_VLT10M_YN = #{hz1Vlt10mYn},
			HZ1_VLT3M_YN = #{hz1Vlt3mYn},
			HZ1_VLT_ETC1 = #{hz1VltEtc1},
			HZ1_VLT_ETC1_YN = #{hz1VltEtc1Yn},
			HZ1_VLT_ETC2 = #{hz1VltEtc2},
			HZ1_VLT_ETC2_YN = #{hz1VltEtc2Yn},
			HZ1_LNGTH_1M_YN = #{hz1Lngth1mYn},
			HZ1_LNGTH_3M_YN = #{hz1Lngth3mYn},
			HZ1_LNGTH_10M_YN = #{hz1Lngth10mYn},
			HZ1_LNGTH_30M_YN = #{hz1Lngth30mYn},
			HZ1_ANTN_2M_YN = #{hz1Antn2mYn},
			HZ1_ANTN_3M_YN = #{hz1Antn3mYn},
			HZ1_ANTN_4M_YN = #{hz1Antn4mYn},
			HZ1_TEMP = #{hz1Temp},
			HZ1_HMDT = #{hz1Hmdt},
			HZ1_MSRMN_YEAR = #{hz1MsrmnYear},
			HZ1_MSRMN_MON = #{hz1MsrmnMon},
			HZ1_MSRMN_DAY = #{hz1MsrmnDay},
			HZ1_MSRMN_HOUR = #{hz1MsrmnHour},
			HZ1_MSRMN_MIN = #{hz1MsrmnMin},
			HZ1_SIGN = #{hz1Sign},
			<if test="hz1SignUrl != null and hz1SignUrl != ''">HZ1_SIGN_URL = #{hz1SignUrl},</if>
			HZ1_RESULT_CODE = #{hz1ResultCode},
			HZ2_CODE = #{hz2Code},
			HZ2_VLT10M_YN = #{hz2Vlt10mYn},
			HZ2_VLT3M_YN = #{hz2Vlt3mYn},
			HZ2_VLT_ETC1 = #{hz2VltEtc1},
			HZ2_VLT_ETC1_YN = #{hz2VltEtc1Yn},
			HZ2_VLT_ETC2 = #{hz2VltEtc2},
			HZ2_VLT_ETC2_YN = #{hz2VltEtc2Yn},
			HZ2_LNGTH_1M_YN = #{hz2Lngth1mYn},
			HZ2_LNGTH_3M_YN = #{hz2Lngth3mYn},
			HZ2_LNGTH_10M_YN = #{hz2Lngth10mYn},
			HZ2_LNGTH_30M_YN = #{hz2Lngth30mYn},
			HZ2_TEMP = #{hz2Temp},
			HZ2_HMDT = #{hz2Hmdt},
			HZ2_MSRMN_YEAR = #{hz2MsrmnYear},
			HZ2_MSRMN_MON = #{hz2MsrmnMon},
			HZ2_MSRMN_DAY = #{hz2MsrmnDay},
			HZ2_MSRMN_HOUR = #{hz2MsrmnHour},
			HZ2_MSRMN_MIN = #{hz2MsrmnMin},
			HZ2_SIGN = #{hz2Sign},
			<if test="hz2SignUrl != null and hz2SignUrl != ''">HZ2_SIGN_URL = #{hz2SignUrl},</if>
			HZ2_RESULT_CODE = #{hz2ResultCode},
			RESULT_URL = #{resultUrl},
			UDT_MEM_ID = #{udtMemId}
	</insert>
	
	<select id="esdDetail" parameterType="int" resultType="esdDTO">
		SELECT ESD_SEQ,
		    RAW_SEQ,
		    VLT_AC_YN,
		    VLT_ETC,
		    VLT_ETC_YN,
		    VAR_N_YN,
		    VAR_Y_YN,
		    ROOM1_YN,
		    ROOM2_YN,
		    TEMP,
		    TEMP_PLUS,
		    HMDT,
		    HMDT_PLUS,
		    BRMT,
		    BRMT_PLUS,
		    DC_1S_YN,
		    DC_ETC,
		    DC_ETC_YN,
		    DC_GIN_YN,
		    DC_CON_YN,
		    DC_IMP_YN,
		    DC_IMP_ETC,
		    DC_IMP_ETC_YN,
		    EVLTN_A_YN,
		    EVLTN_B_YN,
		    EVLTN_C_YN,
		    DC_CON_2_YN,
		    DC_CON_4_YN,
		    DC_CON_6_YN,
		    DC_CON_8_YN,
		    DC_CON_ETC,
		    DC_CON_ETC_YN,
		    DC_GIN_2_YN,
		    DC_GIN_4_YN,
		    DC_GIN_6_YN,
		    DC_GIN_8_YN,
		    DC_GIN_ETC,
		    DC_GIN_ETC_YN,
		    H_2_YN,
		    H_4_YN,
		    H_6_YN,
		    H_8_YN,
		    H_ETC,
		    H_ETC_YN,
		    V_2_YN,
		    V_4_YN,
		    V_6_YN,
		    V_8_YN,
		    V_ETC,
		    V_ETC_YN,
		    MSRMN_YEAR,
		    MSRMN_MON,
		    MSRMN_DAY,
		    MSRMN_HOUR,
		    MSRMN_MIN,
		    SIGN,
		    SIGN_URL,
		    RESULT_CODE,
		    INDRC_H_YN,
		    INDRC_H_RESULT_CODE,
		    INDRC_H_MEMO,
		    INDRC_V_YN,
		    INDRC_V_RESULT_CODE,
		    INDRC_V_MEMO,
		    CMNT_A_YN,
		    CMNT_ETC,
		    CMNT_ETC_YN,
		    INS_MEM_ID,
		    INS_DT,
		    UDT_MEM_ID,
		    UDT_DT,
		    STATE
		FROM METHOD_ESD_TB
		WHERE 1=1
		AND RAW_SEQ = #{rawSeq}
	</select>
	
	<insert id="insertEsd" parameterType="reDTO">
		<selectKey resultType="int" keyProperty="esdSeq" order="BEFORE">
	        SELECT ifnull(MAX(ESD_SEQ)+1,1) esdSeq FROM METHOD_ESD_TB
	    </selectKey>
		INSERT INTO METHOD_ESD_TB
		(
			ESD_SEQ,
			RAW_SEQ,
			VLT_AC_YN,
			VLT_ETC,
			VLT_ETC_YN,
			VAR_N_YN,
			VAR_Y_YN,
			ROOM1_YN,
			ROOM2_YN,
			TEMP,
			TEMP_PLUS,
			HMDT,
			HMDT_PLUS,
			BRMT,
			BRMT_PLUS,
			DC_1S_YN,
			DC_ETC,
			DC_ETC_YN,
			DC_GIN_YN,
			DC_CON_YN,
			DC_IMP_YN,
			DC_IMP_ETC,
			DC_IMP_ETC_YN,
			EVLTN_A_YN,
			EVLTN_B_YN,
			EVLTN_C_YN,
			DC_CON_2_YN,
			DC_CON_4_YN,
			DC_CON_6_YN,
			DC_CON_8_YN,
			DC_CON_ETC,
			DC_CON_ETC_YN,
			DC_GIN_2_YN,
			DC_GIN_4_YN,
			DC_GIN_6_YN,
			DC_GIN_8_YN,
			DC_GIN_ETC,
			DC_GIN_ETC_YN,
			H_2_YN,
			H_4_YN,
			H_6_YN,
			H_8_YN,
			H_ETC,
			H_ETC_YN,
			V_2_YN,
			V_4_YN,
			V_6_YN,
			V_8_YN,
			V_ETC,
			V_ETC_YN,
			MSRMN_YEAR,
			MSRMN_MON,
			MSRMN_DAY,
			MSRMN_HOUR,
			MSRMN_MIN,
			SIGN,
			SIGN_URL,
			RESULT_CODE,
			INDRC_H_YN,
			INDRC_H_RESULT_CODE,
			INDRC_H_MEMO,
			INDRC_V_YN,
			INDRC_V_RESULT_CODE,
			INDRC_V_MEMO,
			CMNT_A_YN,
			CMNT_ETC,
			CMNT_ETC_YN,
			INS_MEM_ID,
			UDT_MEM_ID
		)
		VALUES
		(
			#{esdSeq},
			#{rawSeq},
			#{vltAcYn},
			#{vltEtc},
			#{vltEtcYn},
			#{varNYn},
			#{varYYn},
			#{room1Yn},
			#{room2Yn},
			#{temp},
			#{tempPlus},
			#{hmdt},
			#{hmdtPlus},
			#{brmt},
			#{brmtPlus},
			#{dc1sYn},
			#{dcEtc},
			#{dcEtcYn},
			#{dcGinYn},
			#{dcConYn},
			#{dcImpYn},
			#{dcImpEtc},
			#{dcImpEtcYn},
			#{evltnAYn},
			#{evltnBYn},
			#{evltnCYn},
			#{dcCon2Yn},
			#{dcCon4Yn},
			#{dcCon6Yn},
			#{dcCon8Yn},
			#{dcConEtc},
			#{dcConEtcYn},
			#{dcGin2Yn},
			#{dcGin4Yn},
			#{dcGin6Yn},
			#{dcGin8Yn},
			#{dcGinEtc},
			#{dcGinEtcYn},
			#{h2Yn},
			#{h4Yn},
			#{h6Yn},
			#{h8Yn},
			#{hEtc},
			#{hEtcYn},
			#{v2Yn},
			#{v4Yn},
			#{v6Yn},
			#{v8Yn},
			#{vEtc},
			#{vEtcYn},
			#{msrmnYear},
			#{msrmnMon},
			#{msrmnDay},
			#{msrmnHour},
			#{msrmnMin},
			#{sign},
			#{signUrl},
			#{resultCode},
			#{indrcHYn},
			#{indrcHResultCode},
			#{indrcHMemo},
			#{indrcVYn},
			#{indrcVResultCode},
			#{indrcVMemo},
			#{cmntAYn},
			#{cmntEtc},
			#{cmntEtcYn},
			#{insMemId},
			#{udtMemId}
			)
			ON DUPLICATE KEY UPDATE
				VLT_AC_YN = #{vltAcYn},
			    VLT_ETC = #{vltEtc},
			    VLT_ETC_YN = #{vltEtcYn},
			    VAR_N_YN = #{varNYn},
			    VAR_Y_YN = #{varYYn},
			    ROOM1_YN = #{room1Yn},
			    ROOM2_YN = #{room2Yn},
			    TEMP = #{temp},
			    TEMP_PLUS = #{tempPlus},
			    HMDT = #{hmdt},
			    HMDT_PLUS = #{hmdtPlus},
			    BRMT = #{brmt},
			    BRMT_PLUS = #{brmtPlus},
			    DC_1S_YN = #{dc1sYn},
			    DC_ETC = #{dcEtc},
			    DC_ETC_YN = #{dcEtcYn},
			    DC_GIN_YN = #{dcGinYn},
			    DC_CON_YN = #{dcConYn},
			    DC_IMP_YN = #{dcImpYn},
			    DC_IMP_ETC = #{dcImpEtc},
			    DC_IMP_ETC_YN = #{dcImpEtcYn},
			    EVLTN_A_YN = #{evltnAYn},
			    EVLTN_B_YN = #{evltnBYn},
			    EVLTN_C_YN = #{evltnCYn},
			    DC_CON_2_YN = #{dcCon2Yn},
			    DC_CON_4_YN = #{dcCon4Yn},
			    DC_CON_6_YN = #{dcCon6Yn},
			    DC_CON_8_YN = #{dcCon8Yn},
			    DC_CON_ETC = #{dcConEtc},
			    DC_CON_ETC_YN = #{dcConEtcYn},
			    DC_GIN_2_YN = #{dcGin2Yn},
			    DC_GIN_4_YN = #{dcGin4Yn},
			    DC_GIN_6_YN = #{dcGin6Yn},
			    DC_GIN_8_YN = #{dcGin8Yn},
			    DC_GIN_ETC = #{dcGinEtc},
			    DC_GIN_ETC_YN = #{dcGinEtcYn},
			    H_2_YN = #{h2Yn},
			    H_4_YN = #{h4Yn},
			    H_6_YN = #{h6Yn},
			    H_8_YN = #{h8Yn},
			    H_ETC = #{hEtc},
			    H_ETC_YN = #{hEtcYn},
			    V_2_YN = #{v2Yn},
			    V_4_YN = #{v4Yn},
			    V_6_YN = #{v6Yn},
			    V_8_YN = #{v8Yn},
			    V_ETC = #{vEtc},
			    V_ETC_YN = #{vEtcYn},
			    MSRMN_YEAR = #{msrmnYear},
			    MSRMN_MON = #{msrmnMon},
			    MSRMN_DAY = #{msrmnDay},
			    MSRMN_HOUR = #{msrmnHour},
			    MSRMN_MIN = #{msrmnMin},
			    SIGN = #{sign},
			    <if test="signUrl != null and signUrl != ''">SIGN_URL = #{signUrl},</if>
			    RESULT_CODE = #{resultCode},
				INDRC_H_YN = #{indrcHYn},
				INDRC_H_RESULT_CODE = #{indrcHResultCode},
				INDRC_H_MEMO = #{indrcHMemo},
				INDRC_V_YN = #{cmntAYn},
				INDRC_V_RESULT_CODE  =#{indrcVResultCode},
				INDRC_V_MEMO = #{indrcVMemo},
				CMNT_A_YN = #{cmntAYn},
				CMNT_ETC = #{cmntEtc},
				CMNT_ETC_YN = #{cmntEtcYn},
				UDT_MEM_ID = #{udtMemId}			
	</insert>

	<insert id="insertEsdSub">
		INSERT INTO METHOD_ESD_SUB_TB
		(
			ESD_SEQ,
			DRCTL,
			DC_CODE,
			RESULT_CODE,
			MEMO
		)
		VALUES
		<foreach collection="MethodEsdSubList" item="item" separator=",">
		(
			#{esdSeq},
			#{item.drctl},
			#{item.dcCode},
			#{item.resultCode},
			#{item.memo}
		)
		</foreach>
	</insert>
	
	<update id="updateEsdSub">
		<foreach collection="MethodEsdSubList" item="item" separator=";">
		UPDATE METHOD_ESD_SUB_TB
		SET
			DRCTL = #{item.drctl},
			DC_CODE = #{item.dcCode},
			RESULT_CODE = #{item.resultCode},
			MEMO = #{item.memo},
			STATE = #{item.state}
		WHERE ESD_SUB_SEQ = #{item.esdSubSeq}
		</foreach>
	</update>

	<update id="deleteEsdSub">
		<foreach collection="MethodEsdSubList" item="item" separator=";">
		UPDATE METHOD_ESD_SUB_TB
		SET
			STATE = #{item.state}
		WHERE ESD_SUB_SEQ = #{item.esdSubSeq}
		</foreach>
	</update>
	
</mapper>